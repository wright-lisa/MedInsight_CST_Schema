USE [MI_CHSD2017]
GO

/****** Object:  StoredProcedure [CST].[CONSOLIDATE_02_MEMBER_MONTH]    Script Date: 12/6/2018 3:56:24 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO












ALTER PROCEDURE [CST].[CONSOLIDATE_02_MEMBER_MONTH]
	@TRUNCATE VARCHAR(1),
	@INDEX VARCHAR(1)
 AS


SET NOCOUNT ON


IF @TRUNCATE = 'Y' BEGIN
	TRUNCATE TABLE MEMBER_MONTH
	TRUNCATE TABLE MEMBER_MONTH_UDF
	TRUNCATE TABLE MEMBER_MONTH_ATTRIB
	TRUNCATE TABLE MEMBER_MONTH_CCHG_CONDITION
	TRUNCATE TABLE MEMBER_MONTH_ERG_RISK
	-- LW 1/23/18 update HCC table to CMSHCC MI V11
	TRUNCATE TABLE MEMBER_MONTH_CMSHCC_RISK
	TRUNCATE TABLE MEMBER_MONTH_MARA_RISK
	TRUNCATE TABLE MEMBER_MONTH_MARA_HCC_RISK
	TRUNCATE TABLE MEMBER_MONTH_MARA_HCC_CLASS
	TRUNCATE TABLE MEMBER_MONTH_PRIMARY_CONDITION
	TRUNCATE TABLE MEMBER_MONTH_MARA_RISK_CONCURRENT_CONDITIONS
	TRUNCATE TABLE MEMBER_MONTH_MARA_RISK_PROSPECTIVE_CONDITIONS
	-- LW 12/4/18
	TRUNCATE TABLE MEMBER_MARA_RESULTS_CLASS
	TRUNCATE TABLE EBM.EBM_DETAIL
END

exec SP_MI_TOGGLE_IDX 'MEMBER_MONTH','OFF'
exec SP_MI_TOGGLE_IDX 'MEMBER_MONTH_UDF','OFF'
exec SP_MI_TOGGLE_IDX 'MEMBER_MONTH_ATTRIB','OFF'
exec SP_MI_TOGGLE_IDX 'MEMBER_MONTH_CCHG_CONDITION','OFF'
exec SP_MI_TOGGLE_IDX 'MEMBER_MONTH_ERG_RISK','OFF'
exec SP_MI_TOGGLE_IDX 'MEMBER_MONTH_CMSHCC_RISK','OFF'
exec SP_MI_TOGGLE_IDX 'MEMBER_MONTH_MARA_RISK','OFF'
exec SP_MI_TOGGLE_IDX 'MEMBER_MONTH_MARA_HCC_RISK','OFF'
exec SP_MI_TOGGLE_IDX 'MEMBER_MONTH_MARA_HCC_CLASS','OFF'
exec SP_MI_TOGGLE_IDX 'MEMBER_MONTH_PRIMARY_CONDITION','OFF'
exec SP_MI_TOGGLE_IDX 'MEMBER_MONTH_MARA_RISK_CONCURRENT_CONDITIONS','OFF'
exec SP_MI_TOGGLE_IDX 'MEMBER_MONTH_MARA_RISK_PROSPECTIVE_CONDITIONS','OFF'
exec SP_MI_TOGGLE_IDX 'MEMBER_MARA_RESULTS_CLASS','OFF'
exec SP_MI_TOGGLE_IDX 'EBM.EBM_DETAIL','OFF'


DECLARE @DB_NAME VARCHAR(50)
DECLARE @CID VARCHAR(2)
DECLARE @SQL VARCHAR(8000) = ''
DECLARE @TABLE_NAME VARCHAR(50)

raiserror ('Databases identified for consolidation', 10,1) with nowait

-- OPEN COLUMN CURSOR AND LOOP --
DECLARE db_cursor CURSOR FOR  
SELECT DBS,CID
FROM ##TEMP_DBS 
OPEN db_cursor   
FETCH NEXT FROM db_cursor INTO @DB_NAME,@CID

WHILE @@FETCH_STATUS = 0 BEGIN  

	EXEC CST.CONSOLIDATE_02_MEMBER_MONTH_KEYS @DB_NAME,@CID

	SET @SQL = '
	INSERT INTO MEMBER_MONTH(
	[MEMBER_MONTH_START_DATE]
      ,[MEMBER_KEY]
      ,[EFF_DATE]
      ,[TERM_DATE]
      ,[PROD_TYPE_KEY]
      ,[MI_POST_DATE]
      ,[MI_PERSON_KEY]
      ,[TERM_RSN_KEY]
      ,[SUBSCRIBER_KEY]
      ,[RELATION_KEY]
      ,[GRP_KEY]
      ,[PCP_PROV_KEY]
      ,[ACO_ID_KEY]
      ,[MED_HOME_ID_KEY]
      ,[TIER_KEY]
      ,[_MI_USER_DIM_01_KEY]
      ,[_MI_USER_DIM_02_KEY]
      ,[_MI_USER_DIM_03_KEY]
      ,[_MI_USER_DIM_04_KEY]
      ,[_MI_USER_DIM_05_KEY]
      ,[_MI_USER_DIM_06_KEY]
      ,[_MI_USER_DIM_07_KEY]
      ,[_MI_USER_DIM_08_KEY]
      ,[_MI_USER_DIM_09_KEY]
      ,[_MI_USER_DIM_10_KEY]
      ,[CONTRACT_KEY]
      ,[BEN_PKG_KEY]
      ,[MM_UNITS]
      ,[RX_UNITS]
      ,[DN_UNITS]
      ,[VS_UNITS]
      ,[_USER_COVERAGE_IND_01_]
      ,[_USER_COVERAGE_IND_02_]
      ,[_USER_COVERAGE_IND_03_]
      ,[_USER_COVERAGE_IND_04_]
      ,[MEM_STAT_KEY]
      ,[ENR_PRIMARY]
      ,[MEDICAID_PART_B_BUYIN]
      ,[MEDICARE_BASIS]
      ,[MEDICAID_BASIS]
      ,[MEDICARE_DUAL]
      ,[HHS_PLAN_METAL_LEVEL]
      ,[HHS_CSR_VALUE]
      ,[PAYER_TYPE_KEY]
      ,[DATA_SOURCE_KEY]
      ,[HIRE_DATE]
      ,[ENROLLMENT_KEY]
      ,[AGE]
      ,[MONTHS]
      ,[GENDER]
      ,[ZIP3]
      ,[BENCH_SLICE_KEY]
     -- ,[MEMBER_MONTH_KEY]
      ,[ROWCONTROL_KEY]
	
	)
	SELECT
	[MEMBER_MONTH_START_DATE]
      ,M.T_MEMBER_KEY AS [MEMBER_KEY]
      ,[EFF_DATE]
      ,[TERM_DATE]
      ,coalesce(T_PROD_TYPE_KEY,0) AS [PROD_TYPE_KEY]
      ,[MI_POST_DATE]
      ,coalesce(T_PERSON_KEY,0) as [MI_PERSON_KEY]
      ,coalesce(T_TERM_RSN_KEY,0) as [TERM_RSN_KEY]
      ,S.T_MEMBER_KEY as [SUBSCRIBER_KEY]
      ,coalesce(T_RELATION_KEY,3)  as [RELATION_KEY]
      ,COALESCE(T_GRP_KEY,0) as [GRP_KEY]
      ,COALESCE(T_PROV_KEY,0) as [PCP_PROV_KEY]
      ,T_ACO_ID_KEY as [ACO_ID_KEY]
      ,0 as [MED_HOME_ID_KEY]
      ,0 as [TIER_KEY]

      ,[T_MI_USER_DIM_01_KEY]
      ,[T_MI_USER_DIM_02_KEY]
      ,[T_MI_USER_DIM_03_KEY]
      ,[T_MI_USER_DIM_04_KEY]
      ,[T_MI_USER_DIM_05_KEY]
      ,[T_MI_USER_DIM_06_KEY]
      ,[T_MI_USER_DIM_07_KEY]
      ,[T_MI_USER_DIM_08_KEY]
      ,[T_MI_USER_DIM_09_KEY]
      ,[T_MI_USER_DIM_10_KEY]
      ,0 AS [CONTRACT_KEY]
      ,0 AS [BEN_PKG_KEY]
      ,[MM_UNITS]
      ,[RX_UNITS]
      ,[DN_UNITS]
      ,[VS_UNITS]
      ,0 AS [_USER_COVERAGE_IND_01_]
      ,0 AS [_USER_COVERAGE_IND_02_]
      ,0 AS [_USER_COVERAGE_IND_03_]
      ,0 AS [_USER_COVERAGE_IND_04_]
      ,0 AS [MEM_STAT_KEY]
      ,[ENR_PRIMARY]
      ,NULL AS [MEDICAID_PART_B_BUYIN]
      ,NULL AS [MEDICARE_BASIS]
      ,NULL AS [MEDICAID_BASIS]
      ,NULL AS [MEDICARE_DUAL]
      ,[HHS_PLAN_METAL_LEVEL]
      ,[HHS_CSR_VALUE]
      ,[T_PAYER_TYPE_KEY]
      ,[T_DATA_SOURCE_KEY]
      ,[HIRE_DATE]
      ,[ENROLLMENT_KEY]
      ,[AGE]
      ,[MONTHS]
      ,[GENDER]
      ,[ZIP3]
      ,[BENCH_SLICE_KEY]
   --   ,[MEMBER_MONTH_KEY]
      ,[ROWCONTROL_KEY]
		
	FROM ' + @DB_NAME + '.dbo.MEMBER_MONTH MM
		LEFT JOIN ##MEMBER M ON MM.MEMBER_KEY = M.S_MEMBER_KEY
		LEFT JOIN ##MEMBER S ON MM.SUBSCRIBER_KEY = S.S_MEMBER_KEY
		LEFT JOIN ##RFT_PERSON_ID PE ON MM.MI_PERSON_KEY = PE.S_PERSON_KEY
		LEFT JOIN ##RFT_MI_USER_DIM_01_ U01 ON MM._MI_USER_DIM_01_KEY = U01.S_MI_USER_DIM_01_KEY
		LEFT JOIN ##RFT_MI_USER_DIM_02_ U02 ON MM._MI_USER_DIM_02_KEY = U02.S_MI_USER_DIM_02_KEY
		LEFT JOIN ##RFT_MI_USER_DIM_03_ U03 ON MM._MI_USER_DIM_03_KEY = U03.S_MI_USER_DIM_03_KEY
		LEFT JOIN ##RFT_MI_USER_DIM_04_ U04 ON MM._MI_USER_DIM_04_KEY = U04.S_MI_USER_DIM_04_KEY
		LEFT JOIN ##RFT_MI_USER_DIM_05_ U05 ON MM._MI_USER_DIM_05_KEY = U05.S_MI_USER_DIM_05_KEY
		LEFT JOIN ##RFT_MI_USER_DIM_06_ U06 ON MM._MI_USER_DIM_06_KEY = U06.S_MI_USER_DIM_06_KEY
		LEFT JOIN ##RFT_MI_USER_DIM_07_ U07 ON MM._MI_USER_DIM_07_KEY = U07.S_MI_USER_DIM_07_KEY
		LEFT JOIN ##RFT_MI_USER_DIM_08_ U08 ON MM._MI_USER_DIM_08_KEY = U08.S_MI_USER_DIM_08_KEY
		LEFT JOIN ##RFT_MI_USER_DIM_09_ U09 ON MM._MI_USER_DIM_09_KEY = U09.S_MI_USER_DIM_09_KEY
		LEFT JOIN ##RFT_MI_USER_DIM_10_ U10 ON MM._MI_USER_DIM_10_KEY = U10.S_MI_USER_DIM_10_KEY
		LEFT JOIN ##RFT_DATA_SOURCE D ON MM.DATA_SOURCE_KEY = D.S_DATA_SOURCE_KEY
		LEFT JOIN ##RFT_PAYER_TYPE PT ON MM.PAYER_TYPE_KEY = PT.S_PAYER_TYPE_KEY
		LEFT JOIN ##RFT_MEM_STAT MS ON MM.MEM_STAT_KEY = MS.S_MEM_STAT_KEY
		LEFT JOIN ##BENEFIT B ON MM.BEN_PKG_KEY = B.S_BEN_PKG_KEY
		LEFT JOIN ##RFT_CONTRACT C ON MM.CONTRACT_KEY = C.S_CONTRACT_KEY
		LEFT JOIN ##RFT_TIER T ON MM.TIER_KEY = T.S_TIER_KEY
		LEFT JOIN ##RFT_MED_HOME_ID H ON MM.MED_HOME_ID_KEY = H.S_MED_HOME_ID_KEY
		LEFT JOIN ##RFT_ACO_ID A ON MM.ACO_ID_KEY = A.S_ACO_ID_KEY
		LEFT JOIN ##RFT_RELATION R ON MM.RELATION_KEY = R.S_RELATION_KEY
		LEFT JOIN ##RFT_TERM_RSN TR ON MM.TERM_RSN_KEY = TR.S_TERM_RSN_KEY
		LEFT JOIN ##RFT_PROD_TYPE PR ON MM.PROD_TYPE_KEY = PR.S_PROD_TYPE_KEY
		LEFT JOIN ##EMP_GROUP G ON MM.GRP_KEY = G.S_GRP_KEY
		LEFT JOIN ##PROVIDER P ON MM.PCP_PROV_KEY = P.S_PROV_KEY '
	EXECUTE(@SQL)
	
	SET @SQL = 'MEMBER_MONTH read and consolidated from ' + @DB_NAME
	raiserror (@SQL, 10,1) with nowait
	

	SET @SQL = '
	INSERT INTO MEMBER_MONTH_UDF(
		MEMBER_MONTH_START_DATE,
		MEMBER_KEY,
		EFF_DATE,
		TERM_DATE,
		PROD_TYPE_KEY,
		MI_POST_DATE,
		_ENR_UDF_01_,_ENR_UDF_02_,_ENR_UDF_03_,_ENR_UDF_04_,_ENR_UDF_05_,_ENR_UDF_06_,
		_ENR_UDF_07_,_ENR_UDF_08_,_ENR_UDF_09_,_ENR_UDF_10_,_ENR_UDF_11_,_ENR_UDF_12_,
		_ENR_UDF_13_,_ENR_UDF_14_,_ENR_UDF_15_,_ENR_UDF_16_,_ENR_UDF_17_,_ENR_UDF_18_,
		_ENR_UDF_19_,_ENR_UDF_20_,_ENR_UDF_21_,_ENR_UDF_22_,_ENR_UDF_23_,_ENR_UDF_24_,
		_ENR_UDF_25_,_ENR_UDF_26_,_ENR_UDF_27_,_ENR_UDF_28_,_ENR_UDF_29_,_ENR_UDF_30_,
		_ENR_UDF_31_,_ENR_UDF_32_,_ENR_UDF_33_,_ENR_UDF_34_,_ENR_UDF_35_,_ENR_UDF_36_,
		_ENR_UDF_37_,_ENR_UDF_38_,_ENR_UDF_39_,_ENR_UDF_40_,_ENR_UDF_41_,_ENR_UDF_42_,
		_ENR_UDF_43_,_ENR_UDF_44_,_ENR_UDF_45_,_ENR_UDF_46_,_ENR_UDF_47_,_ENR_UDF_48_,
		_ENR_UDF_49_,_ENR_UDF_50_,
		_ENR_UDF_51_,_ENR_UDF_52_,_ENR_UDF_53_,_ENR_UDF_54_,_ENR_UDF_55_,_ENR_UDF_56_,
		_ENR_UDF_57_,_ENR_UDF_58_,_ENR_UDF_59_,_ENR_UDF_60_,_ENR_UDF_61_,_ENR_UDF_62_,
		_ENR_UDF_63_,_ENR_UDF_64_,_ENR_UDF_65_,_ENR_UDF_66_,_ENR_UDF_67_,_ENR_UDF_68_,
		_ENR_UDF_69_,_ENR_UDF_70_,_ENR_UDF_71_,_ENR_UDF_72_,_ENR_UDF_73_,_ENR_UDF_74_,
		_ENR_UDF_75_,_ENR_UDF_76_,_ENR_UDF_77_,_ENR_UDF_78_,_ENR_UDF_79_,_ENR_UDF_80_,
		_ENR_UDF_81_,_ENR_UDF_82_,_ENR_UDF_83_,_ENR_UDF_84_,_ENR_UDF_85_,_ENR_UDF_86_,
		_ENR_UDF_87_,_ENR_UDF_88_,_ENR_UDF_89_,_ENR_UDF_90_,_ENR_UDF_91_,_ENR_UDF_92_,
		_ENR_UDF_93_,_ENR_UDF_94_,_ENR_UDF_95_,_ENR_UDF_96_,_ENR_UDF_97_,_ENR_UDF_98_,
		_ENR_UDF_99_,_ENR_UDF_100_,
		ENROLLMENT_KEY
	)
	SELECT 
		MEMBER_MONTH_START_DATE,
		M.T_MEMBER_KEY AS MEMBER_KEY,
		EFF_DATE,
		TERM_DATE,
		T_PROD_TYPE_KEY AS PROD_TYPE_KEY,
		MI_POST_DATE,
		_ENR_UDF_01_,_ENR_UDF_02_,_ENR_UDF_03_,_ENR_UDF_04_,_ENR_UDF_05_,_ENR_UDF_06_,
		_ENR_UDF_07_,_ENR_UDF_08_,_ENR_UDF_09_,_ENR_UDF_10_,_ENR_UDF_11_,_ENR_UDF_12_,
		_ENR_UDF_13_,_ENR_UDF_14_,_ENR_UDF_15_,_ENR_UDF_16_,_ENR_UDF_17_,_ENR_UDF_18_,
		_ENR_UDF_19_,_ENR_UDF_20_,_ENR_UDF_21_,_ENR_UDF_22_,_ENR_UDF_23_,_ENR_UDF_24_,
		_ENR_UDF_25_,_ENR_UDF_26_,_ENR_UDF_27_,_ENR_UDF_28_,_ENR_UDF_29_,_ENR_UDF_30_,
		_ENR_UDF_31_,_ENR_UDF_32_,_ENR_UDF_33_,_ENR_UDF_34_,_ENR_UDF_35_,_ENR_UDF_36_,
		_ENR_UDF_37_,_ENR_UDF_38_,_ENR_UDF_39_,_ENR_UDF_40_,_ENR_UDF_41_,_ENR_UDF_42_,
		_ENR_UDF_43_,_ENR_UDF_44_,_ENR_UDF_45_,_ENR_UDF_46_,_ENR_UDF_47_,_ENR_UDF_48_,
		_ENR_UDF_49_,_ENR_UDF_50_,
		_ENR_UDF_51_,_ENR_UDF_52_,_ENR_UDF_53_,_ENR_UDF_54_,_ENR_UDF_55_,_ENR_UDF_56_,
		_ENR_UDF_57_,_ENR_UDF_58_,_ENR_UDF_59_,_ENR_UDF_60_,_ENR_UDF_61_,_ENR_UDF_62_,
		_ENR_UDF_63_,_ENR_UDF_64_,_ENR_UDF_65_,_ENR_UDF_66_,_ENR_UDF_67_,_ENR_UDF_68_,
		_ENR_UDF_69_,_ENR_UDF_70_,_ENR_UDF_71_,_ENR_UDF_72_,_ENR_UDF_73_,_ENR_UDF_74_,
		_ENR_UDF_75_,_ENR_UDF_76_,_ENR_UDF_77_,_ENR_UDF_78_,_ENR_UDF_79_,_ENR_UDF_80_,
		_ENR_UDF_81_,_ENR_UDF_82_,_ENR_UDF_83_,_ENR_UDF_84_,_ENR_UDF_85_,_ENR_UDF_86_,
		_ENR_UDF_87_,_ENR_UDF_88_,_ENR_UDF_89_,_ENR_UDF_90_,_ENR_UDF_91_,_ENR_UDF_92_,
		_ENR_UDF_93_,_ENR_UDF_94_,_ENR_UDF_95_,_ENR_UDF_96_,_ENR_UDF_97_,_ENR_UDF_98_,
		_ENR_UDF_99_,_ENR_UDF_100_,
		ENROLLMENT_KEY
	FROM ' + @DB_NAME + '.dbo.MEMBER_MONTH_UDF MM
		LEFT JOIN ##MEMBER M ON MM.MEMBER_KEY = M.S_MEMBER_KEY
		LEFT JOIN ##RFT_PROD_TYPE PR ON MM.PROD_TYPE_KEY = PR.S_PROD_TYPE_KEY '
	EXECUTE(@SQL)

	SET @SQL = 'MEMBER_MONTH_UDF read and consolidated from ' + @DB_NAME
	raiserror (@SQL, 10,1) with nowait

	SET @SQL = '
	INSERT INTO MEMBER_MONTH_CCHG_CONDITION(
		MEMBER_MONTH_START_DATE,
		MEMBER_KEY,
		CCHG_CAT,
		MI_POST_DATE
	)
	SELECT 
		MEMBER_MONTH_START_DATE,
		M.T_MEMBER_KEY AS MEMBER_KEY,
		CCHG_CAT,
		MI_POST_DATE
	FROM ' + @DB_NAME + '.dbo.MEMBER_MONTH_CCHG_CONDITION MM
		LEFT JOIN ##MEMBER M ON MM.MEMBER_KEY = M.S_MEMBER_KEY '
	EXECUTE(@SQL)

	SET @SQL = 'MEMBER_MONTH_CCHG_CONDITION read and consolidated from ' + @DB_NAME
	raiserror (@SQL, 10,1) with nowait


	SET @SQL = '
	INSERT INTO MEMBER_MONTH_ATTRIB(
		ATTRIBUTION_METHOD_KEY,
		MEMBER_MONTH_START_DATE,
		MEMBER_KEY,
		PROV_KEY
	)
	SELECT 
		ATTRIBUTION_METHOD_KEY,
		MEMBER_MONTH_START_DATE,
		M.T_MEMBER_KEY AS MEMBER_KEY,
		coalesce(T_PROV_KEY,0) AS PROV_KEY
	FROM ' + @DB_NAME + '.dbo.MEMBER_MONTH_ATTRIB MM
		LEFT JOIN ##MEMBER M ON MM.MEMBER_KEY = M.S_MEMBER_KEY
		LEFT JOIN ##PROVIDER P ON MM.PROV_KEY = P.S_PROV_KEY '
	EXECUTE(@SQL)

	SET @SQL = 'MEMBER_MONTH_ATTRIB read and consolidated from ' + @DB_NAME
	raiserror (@SQL, 10,1) with nowait


	SET @SQL = '
	INSERT INTO MEMBER_MONTH_ERG_RISK(
		MEMBER_MONTH_START_DATE,
		MEMBER_KEY,
		PROD_TYPE_KEY,
		ERG_PROSPECTIVE_RISK,
		ERG_RETROSPECTIVE_RISK,
		ERG_DEMOGRAPHIC_RISK,
		ERG_ACTUARIAL_PROSPECTIVE_RISK,
		ERG_PROSPECTIVE_RISK_CATEGORY,
		ERG_RETROSPECTIVE_RISK_CATEGORY,
		ERG_ACTUARIAL_RISK_CATEGORY,
		ERG_PARTIAL_ENROLLMENT
	)
	SELECT 
		MEMBER_MONTH_START_DATE,
		M.T_MEMBER_KEY AS MEMBER_KEY,
		T_PROD_TYPE_KEY,
		ERG_PROSPECTIVE_RISK,
		ERG_RETROSPECTIVE_RISK,
		ERG_DEMOGRAPHIC_RISK,
		ERG_ACTUARIAL_PROSPECTIVE_RISK,
		ERG_PROSPECTIVE_RISK_CATEGORY,
		ERG_RETROSPECTIVE_RISK_CATEGORY,
		ERG_ACTUARIAL_RISK_CATEGORY,
		ERG_PARTIAL_ENROLLMENT
	FROM ' + @DB_NAME + '.dbo.MEMBER_MONTH_ERG_RISK MM
		LEFT JOIN ##MEMBER M ON MM.MEMBER_KEY = M.S_MEMBER_KEY
		LEFT JOIN ##RFT_PROD_TYPE PR ON MM.PROD_TYPE_KEY = PR.S_PROD_TYPE_KEY  
	WHERE ERG_RETROSPECTIVE_RISK IS NOT NULL '
	EXECUTE(@SQL)

	SET @SQL = 'MEMBER_MONTH_ERG_RISK read and consolidated from ' + @DB_NAME
	raiserror (@SQL, 10,1) with nowait

	-- LW 1/23/18 Update HCC MM table
	SET @SQL = '
	exec sp_mi_droptable ''##MEMBER_MONTH_CMSHCC_RISK''
	SELECT 
		H.CMSHCC_MODEL,
		MEMBER_MONTH_START_DATE,
		M.T_MEMBER_KEY AS MEMBER_KEY,
		T_PROD_TYPE_KEY,
		RISK_SCORE
	INTO ##MEMBER_MONTH_CMSHCC_RISK
	FROM ' + @DB_NAME + '.dbo.MEMBER_MONTH_CMSHCC_RISK MM
		LEFT JOIN ##MEMBER M ON MM.MEMBER_KEY = M.S_MEMBER_KEY
		LEFT JOIN ##RFT_PROD_TYPE PR ON MM.PROD_TYPE_KEY = PR.S_PROD_TYPE_KEY
		LEFT JOIN RFT_HCC_MODEL H ON MM.CMSHCC_MODEL_KEY = H.CMSHCC_MODEL_KEY  '
	--EXECUTE(@SQL)


	SET @SQL = '
	INSERT INTO MEMBER_MONTH_CMSHCC_RISK(
		CMSHCC_MODEL_KEY,
		MEMBER_MONTH_START_DATE,
		MEMBER_KEY,
		PROD_TYPE_KEY,
		RISK_SCORE
	)
	SELECT DISTINCT * FROM
		(SELECT 
			H.CMSHCC_MODEL_KEY,
			MEMBER_MONTH_START_DATE,
			MEMBER_KEY,
			T_PROD_TYPE_KEY,
			RISK_SCORE
		FROM ##MEMBER_MONTH_CMSHCC_RISK A
			INNER JOIN RFT_CMSHCC_MODEL H ON A.CMSHCC_MODEL = H.CMSHCC_MODEL
		WHERE RISK_SCORE IS NOT NULL ) k '

	--EXECUTE(@SQL)

	SET @SQL = 'MEMBER_MONTH_CMSHCC_RISK read and consolidated from ' + @DB_NAME
	raiserror (@SQL, 10,1) with nowait
	-- START HERE

	SET @SQL = '
	INSERT INTO MEMBER_MONTH_MARA_RISK(
		MEMBER_MONTH_START_DATE,
		M.MEMBER_KEY,
		EFF_DATE,
		TERM_DATE,
		PROD_TYPE_KEY,
		MI_POST_DATE,
		PRIMARY_CON_MARACLASS_KEY,
		CON_TOTAL,
		CON_RX,
		CON_MEDICAL,
		CON_IP,
		CON_OP,
		CON_PHYSICIAN,
		CON_ER,
		CON_OTH,
		CON_MARA_MODEL_KEY,
		PRIMARY_PRO_MARACLASS_KEY,
		PRO_TOTAL,
		PRO_RX,
		PRO_MEDICAL,
		PRO_IP,
		PRO_OP,
		PRO_PHYSICIAN,
		PRO_ER,
		PRO_OTH,
		PRO_MARA_MODEL_KEY,
		AS_TOTAL,
		AS_MARA_MODEL_KEY
	)
	SELECT 
		MEMBER_MONTH_START_DATE,
		M.T_MEMBER_KEY AS MEMBER_KEY,
		MM.EFF_DATE,
		MM.TERM_DATE,
		T_PROD_TYPE_KEY,
		MI_POST_DATE,
		PRIMARY_CON_MARACLASS_KEY,
		CON_TOTAL,
		CON_RX,
		CON_MEDICAL,
		CON_IP,
		CON_OP,
		CON_PHYSICIAN,
		CON_ER,
		CON_OTH,
		CON_MARA_MODEL_KEY,
		PRIMARY_PRO_MARACLASS_KEY,
		PRO_TOTAL,
		PRO_RX,
		PRO_MEDICAL,
		PRO_IP,
		PRO_OP,
		PRO_PHYSICIAN,
		PRO_ER,
		PRO_OTH,
		PRO_MARA_MODEL_KEY,
		AS_TOTAL,
		AS_MARA_MODEL_KEY
	FROM ' + @DB_NAME + '.dbo.MEMBER_MONTH_MARA_RISK MM
		LEFT JOIN ##MEMBER M ON MM.MEMBER_KEY = M.S_MEMBER_KEY
		LEFT JOIN ##RFT_PROD_TYPE PR ON MM.PROD_TYPE_KEY = PR.S_PROD_TYPE_KEY
	WHERE CON_TOTAL IS NOT NULL  '
	EXECUTE(@SQL)

	SET @SQL = 'MEMBER_MONTH_MARA_RISK read and consolidated from ' + @DB_NAME
	raiserror (@SQL, 10,1) with nowait

-------------
	SET @SQL = '
	INSERT INTO MEMBER_MONTH_MARA_HCC_RISK(
		MEMBER_MONTH_START_DATE,
		M.MEMBER_KEY,
		EFF_DATE,
		TERM_DATE,
		PROD_TYPE_KEY,
		MI_POST_DATE,
		MODELNAME,
		FINAL,
		PLATINUM,
		GOLD,
		SILVER,
		BRONZE,
		CATASTROPHIC,
		PLATINUM_CSR,
		GOLD_CSR,
		SILVER_CSR,
		BRONZE_CSR,
		CATASTROPHIC_CSR,
		HHSYEAR
		)
	SELECT 
		MEMBER_MONTH_START_DATE,
		M.T_MEMBER_KEY AS MEMBER_KEY,
		MM.EFF_DATE,
		MM.TERM_DATE,
		T_PROD_TYPE_KEY,
		MI_POST_DATE,
		MODELNAME,
		FINAL,
		PLATINUM,
		GOLD,
		SILVER,
		BRONZE,
		CATASTROPHIC,
		PLATINUM_CSR,
		GOLD_CSR,
		SILVER_CSR,
		BRONZE_CSR,
		CATASTROPHIC_CSR,
		HHSYEAR
	FROM ' + @DB_NAME + '.dbo.MEMBER_MONTH_MARA_HCC_RISK MM
		LEFT JOIN ##MEMBER M ON MM.MEMBER_KEY = M.S_MEMBER_KEY
		LEFT JOIN ##RFT_PROD_TYPE PR ON MM.PROD_TYPE_KEY = PR.S_PROD_TYPE_KEY
		WHERE HHSYEAR is not NULL  '
	EXECUTE(@SQL)

	SET @SQL = 'MEMBER_MONTH_MARA_HCC_RISK read and consolidated from ' + @DB_NAME
	raiserror (@SQL, 10,1) with nowait
	-- LW 12/4/18 MOVED EBM DETAIL to THIS PROCEDURE
	SET @SQL = '
	INSERT INTO EBM.EBM_DETAIL (
		[MEMBER_KEY]
      ,[PAYER]
      ,[CI_POP_ID]
      ,[CI_MEASURE_ID]
      ,[ENDING_MONTH]
      ,[OLD_DENOMINATOR]
      ,[DENOMINATOR]
      ,[EXCLUSION]
      ,[OLD_NUMERATOR]
      ,[NUMERATOR]
      ,[INVERTED_MEASURE]
      ,[LATEST_MONTH_FLAG]
      ,[Anchor_Date]
      ,[ENROLLMENT_KEY]
      ,[MEMBER_MONTH_KEY]
		)
	SELECT 
	   M.T_MEMBER_KEY AS MEMBER_KEY
      ,[PAYER]
      ,[CI_POP_ID]
      ,[CI_MEASURE_ID]
      ,[ENDING_MONTH]
      ,[OLD_DENOMINATOR]
      ,[DENOMINATOR]
      ,[EXCLUSION]
      ,[OLD_NUMERATOR]
      ,[NUMERATOR]
      ,[INVERTED_MEASURE]
      ,[LATEST_MONTH_FLAG]
      ,[Anchor_Date]
      ,[ENROLLMENT_KEY]
      ,[MEMBER_MONTH_KEY]
		
	FROM ' + @DB_NAME + '.EBM.EBM_DETAIL MM
		LEFT JOIN ##MEMBER M ON MM.MEMBER_KEY = M.S_MEMBER_KEY'

	EXECUTE(@SQL)

	SET @SQL = 'EBM DETAIL read and consolidated from ' + @DB_NAME
	raiserror (@SQL, 10,1) with nowait


	

	--LW 12/4 Add MEMBER_MARA_RESULTS_CLASS
	SET @SQL = '
	INSERT INTO MEMBER_MARA_RESULTS_CLASS(
	   [MI_PERSON_KEY]
      ,[Category]
      ,[Count]
      ,[MaxMonth]
      ,[ModelName]
      ,[ModelPercent]
      ,[MaxIncurredDate]
      ,[MI_POST_DATE]
	
	)
	SELECT
	  coalesce(T_PERSON_KEY,0) as [MI_PERSON_KEY]
      ,[Category]
      ,[Count]
      ,[MaxMonth]
      ,[ModelName]
      ,[ModelPercent]
      ,[MaxIncurredDate]
      ,[MI_POST_DATE] 
		
	FROM ' + @DB_NAME + '.dbo.MEMBER_MARA_RESULTS_CLASS MM
		LEFT JOIN ##RFT_PERSON_ID PE ON MM.MI_PERSON_KEY = PE.S_PERSON_KEY
  '
	EXECUTE(@SQL)

	SET @SQL = 'MEMBER_MARA_RESULTS_CLASS read and consolidated from ' + @DB_NAME
	raiserror (@SQL, 10,1) with nowait


		SET @SQL = '
	INSERT INTO MEMBER_MONTH_MARA_HCC_CLASS(
		MEMBER_MONTH_START_DATE,
		M.MEMBER_KEY,
		EFF_DATE,
		TERM_DATE,
		PROD_TYPE_KEY,
		MI_POST_DATE,
		HHS_HCC_CLASS,
		HHSYEAR
		)
	SELECT 
		MEMBER_MONTH_START_DATE,
		M.T_MEMBER_KEY AS MEMBER_KEY,
		MM.EFF_DATE,
		MM.TERM_DATE,
		T_PROD_TYPE_KEY,
		MI_POST_DATE,
		HHS_HCC_CLASS,
		MM.HHSYEAR
	FROM ' + @DB_NAME + '.dbo.MEMBER_MONTH_MARA_HCC_CLASS MM
		LEFT JOIN ##MEMBER M ON MM.MEMBER_KEY = M.S_MEMBER_KEY
		LEFT JOIN ##RFT_PROD_TYPE PR ON MM.PROD_TYPE_KEY = PR.S_PROD_TYPE_KEY  where HHSYEAR is not NULL '
	EXECUTE(@SQL)

	SET @SQL = 'MEMBER_MONTH_MARA_HCC_CLASS read and consolidated from ' + @DB_NAME
	raiserror (@SQL, 10,1) with nowait


	FETCH NEXT FROM db_cursor INTO @DB_NAME,@CID 
	
END 

CLOSE db_cursor   
DEALLOCATE db_cursor 

IF @INDEX = 'Y' BEGIN

	SET @SQL = 'exec SP_MI_TOGGLE_IDX ''MEMBER_MONTH'',''ON'''
	EXECUTE(@SQL)

	SET @SQL = 'exec SP_MI_TOGGLE_IDX ''MEMBER_MONTH_UDF'',''ON'''
	EXECUTE(@SQL)

	SET @SQL = 'exec SP_MI_TOGGLE_IDX ''MEMBER_MONTH_ATTRIB'',''ON'' '
	EXECUTE(@SQL)

	SET @SQL = 'exec SP_MI_TOGGLE_IDX ''MEMBER_MONTH_CCHG_CONDITION'',''ON'' '
	EXECUTE(@SQL)

	SET @SQL = 'exec SP_MI_TOGGLE_IDX ''MEMBER_MONTH_ERG_RISK'',''ON'' '
	EXECUTE(@SQL)

	SET @SQL = 'exec SP_MI_TOGGLE_IDX ''MEMBER_MONTH_HCC_RISK'',''ON'' '
	EXECUTE(@SQL)

	SET @SQL = 'exec SP_MI_TOGGLE_IDX ''MEMBER_MONTH_MARA_HCC_RISK'',''ON'' '
	EXECUTE(@SQL)

	SET @SQL = 'exec SP_MI_TOGGLE_IDX ''MEMBER_MONTH_MARA_HCC_CLASS'',''ON'' '
	EXECUTE(@SQL)
	
	SET @SQL = 'exec SP_MI_TOGGLE_IDX ''MEMBER_MONTH_MARA_RISK'',''ON'' '
	EXECUTE(@SQL)

	SET @SQL = 'exec SP_MI_TOGGLE_IDX ''MEMBER_MONTH_PRIMARY_CONDITION'',''ON'' '
	EXECUTE(@SQL)

	SET @SQL = 'exec SP_MI_TOGGLE_IDX ''MEMBER_MONTH_MARA_RISK_CONCURRENT_CONDITIONS'',''ON'' '
	EXECUTE(@SQL)

	SET @SQL = 'exec SP_MI_TOGGLE_IDX ''MEMBER_MONTH_MARA_RISK_PROSPECTIVE_CONDITIONS'',''ON'' '
	EXECUTE(@SQL)

	SET @SQL = 'exec SP_MI_TOGGLE_IDX ''MEMBER_MARA_RESULTS_CLASS'',''ON'''
	EXECUTE(@SQL)
	
	SET @SQL = 'exec SP_MI_TOGGLE_IDX ''EBM.EBM_DETAIL'',''ON'''
	EXECUTE(@SQL)

END





GO


