

/****** Object:  StoredProcedure [dbo].[MI_8022_MI_HCG_INPUT_TABLES_RX]    Script Date: 7/30/2018 1:14:02 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [CST].[MI_8022_MI_HCG_INPUT_TABLES_RX]
AS
BEGIN

	DECLARE @DB_ID INT = DB_ID()
	,@LOGID INT = 0
	,@PROC VARCHAR(500)=OBJECT_SCHEMA_NAME(@@PROCID)+'.'+OBJECT_NAME(@@PROCID)
	,@PERF_START datetime
	,@PERF_DURATION int
	,@PERF_ROW INT
	,@RC INT
	,@MSG VARCHAR(1000);

	EXEC dbo.SP_MI_UTIL_LOG_EVENT @@PROCID, @DB_ID, @LOG2ID=@LOGID OUT;
	DECLARE @MI_POST_DATE DATE=COALESCE(DBO.FN_GETMIPARM('MI POST DATE'),'TRAP');

	DECLARE @UTILFORDENIED CHAR(3); SET @UTILFORDENIED  =COALESCE(DBO.FN_GETMIPARM('COUNT UTILS FOR DENIED CLAIM LINES'),'NO')
	DECLARE @HCGCWBPROV CHAR(3); SET @HCGCWBPROV  =COALESCE(DBO.FN_GETMIPARM('HCG USE CROSSWALKED BILL PROV'),'YES')

	--Inserting data for Pharmacy claims. 
	SET @PERF_START = GETDATE();
		
	TRUNCATE TABLE [DBO].[WORK_HCG_PHARMACY_INPUT]

	INSERT INTO [DBO].[WORK_HCG_PHARMACY_INPUT] WITH (TABLOCK) 
			(
				SequenceNumber,	ClaimID,	ContractID,	MemberID,	DOB,	Gender,	FromDate,	PaidDate,	NDC,	EncounterFlag,	MedicalCovered,	ProviderID,	ProviderZIP,	ProviderCounty,	MailOrder
				,IngredientCost,	DispensingFee,	Billed,	Allowed,	Paid,	COB,	Copay,	Coinsurance,	Deductible,	PatientPay,	Units,	DaysSupply,	QuantityDispensed,	RiskPool,	OON,	ClaimLineStatus
				,CurrentAllowed,	srcLOB,	LOB,	srcProduct,	Product,	GroupID,	Zip,	County,	MemberStatus,	UserDefPop1,	UserDefPop2,	UserDefPop3,	UserDefNum1,	UserDefNum2,	UserDefNum3
				,SERVICE_MONTH_START_DATE,	SERVICES_KEY,	CLAIM_ID_KEY,	MI_POST_DATE
			)
	select		   	
				s.SERVICES_KEY as SequenceNumber
				,coalesce(CG.CLAIM_ID_KEY_GROUP,S.CLAIM_ID_KEY) as ClaimId
				,CASE WHEN MX.CONTRACT_KEY IS NOT NULL THEN 'C' WHEN SKL.PROXY_SUBSCRIBER_KEY IS NOT NULL AND SKL.PROXY_SUBSCRIBER_KEY <> 0 THEN 'S' ELSE 'M' END + right(replicate('0',19) + CAST(CASE WHEN MX.CONTRACT_KEY IS NOT NULL THEN COALESCE(CG.CLAIM_ID_KEY_GROUP, S.CLAIM_ID_KEY) WHEN SKL.PROXY_SUBSCRIBER_KEY IS NOT NULL AND SKL.PROXY_SUBSCRIBER_KEY <> 0  THEN SKL.PROXY_SUBSCRIBER_KEY ELSE COALESCE(SKL.MI_PERSON_KEY, S.MI_PERSON_KEY) END AS VARCHAR),19)  AS CONTRACTID
				,COALESCE(SKL.MI_PERSON_KEY, S.MI_PERSON_KEY)  as MemberId
				,convert(varchar(10), m.MEM_DOB, 101) as DateOfBirth
				,m.MEM_Gender as Gender
				,convert(varchar(10), s.From_Date, 101) as FromDate
				,convert(varchar(10), s.Paid_Date, 101) as PaidDate
				,case when  RX.NDC_KEY != 0 then nd.NDC else NULL end as NDC
				,_CLAIM_UDF_09_ as EncounterFlag
				,_CLAIM_UDF_02_ as MedicalCovered
				,convert(CHAR(10), 
					CASE WHEN @HCGCWBPROV='YES' THEN CASE WHEN P1.PROV_CW_KEY=0 THEN NULL ELSE P1.PROV_CW_KEY END
					ELSE CASE WHEN S.BILL_PROV_KEY=0 THEN NULL ELSE S.BILL_PROV_KEY END
					END
					) AS ProviderId
				,PROV_CLINIC_ZIP as ProviderZip
				,NULL as ProviderCounty
				,Rx.RX_FILL_SRC as MailOrder
				,Rx.RX_INGR_COST as IngredientCost
				,Rx.RX_DISP_FEE as DispendsingFee
			--	,CASE 
			--		WHEN SV_STAT='D' THEN
			---			CASE WHEN @UTILFORDENIED='YES' THEN COALESCE(NULLIF(S.AMT_BILLED,0),0.01*SIGN(COALESCE(NULLIF(S.AMT_ALLOWED,0),NULLIF(S.AMT_PAID,0),1))) 
			--					ELSE S.AMT_BILLED END 
			---		ELSE S.AMT_BILLED
			---		END
			--	AS BILLED
			--	,CASE 
			--		WHEN SV_STAT='D' THEN
			--			CASE WHEN @UTILFORDENIED='YES' THEN COALESCE(NULLIF(S.AMT_ALLOWED,0),0.01*SIGN(COALESCE(NULLIF(S.AMT_BILLED,0),NULLIF(S.AMT_PAID,0),1))) 
			--					ELSE S.AMT_ALLOWED END 
			--		ELSE S.AMT_ALLOWED
			--		END
			---		AS ALLOWED
				,S.AMT_BILLED AS BILLED
				,S.AMT_ALLOWED AS ALLOWED
				,s.AMT_PAID as Paid
				,s.AMT_COB as COB
				, s.AMT_COPAY as CoPay
				, s.AMT_COINS as CoInsurance
				, s.AMT_DEDUCT as Deductable
				,coalesce(s.AMT_COPAY,0) + coalesce(s.AMT_COINS,0) + coalesce(s.AMT_DEDUCT,0) as PatientPay
				---,CONVERT(NUMERIC(8,0),CASE WHEN ABS(coalesce(S.SV_UNITS,0)) <= 32767 THEN CONVERT(NUMERIC(8,0),coalesce(S.SV_UNITS,0)) ELSE 32767*sign(COALESCE(S.SV_UNITS,0)) END) AS UNITS
				,_CLAIM_UDF_44_ AS UNITS
				,Rx.RX_DAYS_SUPPLY as DaysSupply	
				,S.SV_UNITS as QuantityDispensed  --what is the name of the field for quantityDispensed
				,NULL as RiskPool
				,_CLAIM_UDF_10_ as OON
				,_CLAIM_UDF_31_ AS CLAIM_LINE_STATUS
				,_CLAIM_UDF_45_ AS CURRENTALLOWED
				--,CASE WHEN S.SV_STAT IN ('P', 'D', 'E', 'R') THEN S.SV_STAT ELSE NULL END AS CLAIM_LINE_STATUS
				--,CASE 
				--	WHEN SV_STAT='D' THEN
				---		CASE WHEN @UTILFORDENIED='YES' THEN COALESCE(NULLIF(S.AMT_ALLOWED,0),0.01*SIGN(COALESCE(NULLIF(S.AMT_BILLED,0),NULLIF(S.AMT_PAID,0),1))) 
					--			ELSE S.AMT_ALLOWED END 
				--	ELSE S.AMT_ALLOWED
				--	END
				--	AS CURRENTALLOWED
				,NULL as srcLOB
				,NULL as LOB
				,NULL as SrcProduct
				,NULL as Product
				,NULL as GroupId
				,NULL as Zip
				,NULL as County
				,NULL as MemberStatus
				,NULL as UserDefPop1
				,NULL as UserDefPop2
				,NULL as UserDefPop3
				,NULL as UserDefNum1
				,NULL as UserDefNum2
				,NULL as UserDefNum3
				,s.SERVICE_MONTH_START_DATE as SERVICE_MONTH_START_DATE
				,s.SERVICES_KEY as SERVICES_KEY
				,s.CLAIM_ID_KEY as CLAIM_ID_KEY
				,s.MI_POST_DATE as MI_POST_DATE
	FROM		dbo.[SERVICES] S
	LEFT JOIN	DBO.HCG_PERSON_KEY_PROXY_SUBSCRIBER_KEY_LOOKUP SKL ON S.MEMBER_KEY = SKL.MEMBER_KEY
	-- LW 7/30/18 ADDED SERVICES UDF AND PROVIDER CLINIC TABLES
	LEFT JOIN   DBO.SERVICES_UDF UDF ON S.SERVICES_KEY = UDF.SERVICES_KEY
	LEFT JOIN	DBO.RFT_CLAIM_ID_GROUP CG ON S.SERVICES_KEY = CG.SERVICES_KEY
	LEFT JOIN	DBO.MEMBER M ON S.MEMBER_KEY = M.MEMBER_KEY
	INNER JOIN	DBO.SERVICES_RX RX ON S.[SERVICE_MONTH_START_DATE]=RX.[SERVICE_MONTH_START_DATE] AND S.[CLAIM_ID_KEY] = RX.[CLAIM_ID_KEY] AND S.[SERVICES_KEY] = RX.[SERVICES_KEY] AND S.[MI_POST_DATE] = RX.[MI_POST_DATE] 
	LEFT JOIN	DBO.RFT_NDC ND ON RX.NDC_KEY = ND.NDC_KEY		
	LEFT JOIN	DBO.PROVIDER P1 ON S.BILL_PROV_KEY = P1.PROV_KEY
	LEFT JOIN	DBO.PROVIDER P2 ON S.ATT_PROV_KEY = P2.PROV_KEY
	LEFT JOIN	DBO.PROVIDER_CLINIC P3 ON P2.PROV_CLINIC_KEY = P3.PROV_CLINIC_KEY
	LEFT JOIN	DBO.RFT_PROV_TAXONOMY TX ON P2.PROV_TAXONOMY = TX.TAXONOMY_CODE 
	LEFT JOIN	DBO.RFT_MRLINE_TAB MR ON S.MR_LINE_KEY = MR.MR_LINE_KEY
	LEFT JOIN	DBO.SUBSCRIBER_EXCEEDS_MAXIMUM_RECORD_COUNT MX ON  MX.CONTRACT_KEY = case when s.Subscriber_Key <> 0 then s.Subscriber_Key else s.MEMBER_KEY end and MX.IS_SUBSCRIBER_KEY = case when s.Subscriber_Key <> 0 then 1 else 0 end
	
	SET @PERF_ROW=@@ROWCOUNT;
	SET @PERF_DURATION = DATEDIFF(minute,@PERF_START,GETDATE())
	EXEC dbo.SP_MI_UTIL_LOG_EVENT @@PROCID, @DB_ID, 'DBO.WORK_HCG_PHARMACY_INPUT LOADED', @PERF_ROW, @DURATION_IN_MIN=@PERF_DURATION, @LOG2ID=@LOGID;


	EXEC dbo.SP_MI_UTIL_LOG_EVENT @@PROCID, @DB_ID, @LOG2ID=@LOGID,@END_FLAG=1;		


END


--$LastChangedDate: 2018-05-23 12:46:20 -0700 (Wed, 23 May 2018) $

--$LastChangedRevision: 41904 $

--$Author: schulb $

--$HeadURL: https://topsvcs.medinsight.milliman.com/svn/MedInsight/branches/Database/MI_12/MI/Schema%20Objects/Schemas/dbo/Programmability/Stored%20Procedures/MI_8022_MI_HCG_INPUT_TABLES_RX.sql $


GO


